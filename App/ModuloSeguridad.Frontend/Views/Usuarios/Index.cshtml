@model UsuariosIndexViewModel
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor;
@{
    var accionModulos = Newtonsoft.Json.JsonConvert.DeserializeObject<List<UsuarioViewModel.AccionModulo>>(HttpContextAccessor.HttpContext.User.FindFirst(System.Security.Claims.ClaimTypes.UserData).Value);
}
@{
    ViewData["Title"] = "Gestión de usuarios";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col">
        <h1>Gestionar Usuarios</h1>
    </div>
</div>

@if (accionModulos.Any(am => am.Accion == Constantes.Acciones.Leer && am.Modulo == Constantes.Modulos.Usuarios))
{
    <div class="row">
        <div class="col">
            <fieldset>
                <legend>Filtros</legend>
                <div class="row">
                    <div class="col">
                        <div class="row">
                            <div class="col">
                                <div class="form-group row">
                                    @Html.LabelFor(model=>model.ApellidoNombre, null, new { @class= "col-sm-2 col-form-label" })
                                    <label for="inputEmail3MD" class="col-sm-2 col-form-label">Email</label>
                                    <div class="col-sm-10">
                                        <div class="md-form mt-0">
                                            <input type="email" class="form-control" id="inputEmail3MD" placeholder="Email">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">

                            </div>
                            <div class="col">

                            </div>
                        </div>
                    </div>
                    <div class="col">
                        <button type="submit" class="btn btn-default">Filtrar</button>
                    </div>
                </div>
            </fieldset>
        </div>
    </div>    

    @(Html
        .Grid(Model.Usuarios.AsQueryable())
        .Build(columns =>
        {
            columns.Add(model=>model.NombreUsuario).Titled("Usuario");
            columns.Add(model=>model.ApellidoNombre).Titled("Apellido y Nombre");
            columns.Add(model=>model.Grupos).Titled("Grupos");
            columns.Add(model=>model.Email).Titled("Email");
            columns.Add(model => model.Estado).Titled("Estado");
        })
        .Using(GridFilterMode.Header)
        .Empty("Datos no encontrados")
        .Sortable()
        .Pageable(pager=>
        {
            pager.PageSizes = new Dictionary<int, string> { { 2, "2" }, { 4, "4" }, { 11, "11" } };
            pager.ShowPageSizes = true;
            pager.PagesToDisplay = 3;
            pager.CurrentPage = 1;
            pager.RowsPerPage = 11;
        })
    )
}